#include<stdio.h>
#include<vector>
#include<algorithm>
#include<utility>
#define INF 5000000000
using namespace std;
typedef pair<long long,pair<int,int> > PP;
long long modest(long long x);
int main(void)
{
    int num,i,j,roll;
    long long answer1,answer2,answer3;
    int left,right,middle;
    long long tmp,minimum_line=INF,now;
    vector<long long> acid;
    vector<long long> base;
    vector<PP> acid_2;
    vector<PP> base_2;
    scanf("%d",&num);
    for(i=1; i<=num; i++)
    {
        scanf("%lld",&tmp);
        if(tmp>0)
        {
            acid.push_back(tmp);
        }
        else
        {
            base.push_back(tmp);
        }
    }
    sort(acid.begin(),acid.end());
    sort(base.begin(),base.end());
    if(acid.size()>=3)
    {
        minimum_line=acid[0]+acid[1]+acid[2];
        answer1=acid[0];
        answer2=acid[1];
        answer3=acid[2];
    }
    if(base.size()>=3)
    {
        roll=base.size();
        if(minimum_line>modest(base[roll-1]+base[roll-2]+base[roll-3]))
        {
            minimum_line=modest(base[roll-1]+base[roll-2]+base[roll-3]);
            answer1=base[roll-3];
            answer2=base[roll-2];
            answer3=base[roll-1];
        }
    }
    roll=acid.size();
    for(i=0; i<roll; i++)
    {
        for(j=i+1; j<roll; j++)
        {
            acid_2.push_back(make_pair(acid[i]+acid[j],make_pair(i,j)));
        }
    }
    roll=base.size();
    for(i=0; i<roll; i++)
    {
        for(j=i+1; j<roll; j++)
        {
            base_2.push_back(make_pair(base[i]+base[j],make_pair(i,j)));
        }
    }
    sort(acid_2.begin(),acid_2.end());
    sort(base_2.begin(),base_2.end());
    roll=acid.size();//산 1,염기 2
    for(i=0; i<roll; i++)
    {
        left=0;
        right=base_2.size()-1;
        while(left<=right)
        {
            middle=(left+right)/2;
            now=acid[i]+base_2[middle].first;
            tmp=modest(now);
            if(minimum_line>tmp)
            {
                minimum_line=tmp;
                answer1=base[base_2[middle].second.first];
                answer2=base[base_2[middle].second.second];
                answer3=acid[i];
            }
            if(now>0)
            {
                right=middle-1;
            }
            else if(now<0)
            {
                left=middle+1;
            }
            else
            {
                break;
            }
        }
    }
    roll=base.size();//산 2,염기 1
    for(i=0; i<roll; i++)
    {
        left=0;
        right=acid_2.size()-1;
        while(left<=right)
        {
            middle=(left+right)/2;
            now=base[i]+acid_2[middle].first;
            tmp=modest(now);
            if(minimum_line>tmp)
            {
                minimum_line=tmp;
                answer1=base[i];
                answer2=acid[acid_2[middle].second.first];
                answer3=acid[acid_2[middle].second.second];
            }
            if(now>0)
            {
                right=middle-1;
            }
            else if(now<0)
            {
                left=middle+1;
            }
            else
            {
                break;
            }
        }
    }
    printf("%lld %lld %lld",answer1,answer2,answer3);
    return 0;
}
long long modest(long long x)
{
    if(x<0)
    {
        x*=-1;
    }
    return x;
}
