#include<stdio.h>
int sticker[3][100010];//스티커 모음
int chart[3][100010];//스티커 행별 최대 구하는 표
void clear(void)//테스트케이스별 초기화
{
    int i,j;
    for(i=1; i<=2; i++)
    {
        for(j=1; j<=100003; j++)
        {
            chart[i][j]=0;
        }
    }
}
int bigger(int a,int b,int c)
{
    if(a>=b && a>=c)
    {
        return a;
    }
    else if(b>=a && b>=c)
    {
        return b;

    }
    return c;
}
int main(void)
{
    int num,width,k,i,j,answer=0;
    scanf("%d",&num);//테스트케이스의 수를 입력받는다.
    for(k=1; k<=num; k++)
    {
        clear();
        answer=0;
        scanf("%d",&width);//스티커의 개수를 입력받는다.
        for(i=1; i<=2; i++)
        {
            for(j=1; j<=width; j++)
            {
                scanf("%d",&sticker[i][j]);//스티커의 가격을 입력받는다.
            }
        }
        chart[1][1]=sticker[1][1];
        chart[2][1]=sticker[2][1];
        for(i=2; i<=width; i++)
        {//한 열의 스티커를 하나 떼면 이전까지 ㄱ자로 이어진 3개의 스티커는 사용이 가능하다.
            chart[1][i]=sticker[1][i]+bigger(chart[2][i-1],chart[1][i-2],chart[2][i-2]);
            chart[2][i]=sticker[2][i]+bigger(chart[1][i-1],chart[1][i-2],chart[2][i-2]);
        }
        for(i=1; i<=2; i++)
        {
            for(j=1; j<=width; j++)
            {
                if(answer<chart[i][j])
                {
                    answer=chart[i][j];//가장 큰 값을 찾는다.
                }
            }
        }
        printf("%d\n",answer);//최종 정답을 출력한다.
    }
    return 0;
}
